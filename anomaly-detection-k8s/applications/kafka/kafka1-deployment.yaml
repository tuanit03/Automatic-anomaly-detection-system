apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka1
  namespace: anomaly-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka1
  template:
    metadata:
      labels:
        app: kafka1
    spec:
      containers:
      - name: kafka1
        image: confluentinc/cp-kafka:7.8.0
        ports:
        - containerPort: 9092
        - containerPort: 9093
        - containerPort: 9096
        env:
        - name: KAFKA_NODE_ID
          value: "1"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_PROCESS_ROLES
          value: "broker,controller"
        - name: KAFKA_CONTROLLER_QUORUM_VOTERS
          value: "1@kafka1:9093,2@kafka2:9093"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://0.0.0.0:9092,EXTERNAL://0.0.0.0:9096,CONTROLLER://0.0.0.0:9093"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://kafka1:9092,EXTERNAL://kafka1:9096"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT"
        - name: KAFKA_CONTROLLER_LISTENER_NAMES
          value: "CONTROLLER"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: "PLAINTEXT"
        - name: CLUSTER_ID
          value: "EmptNWtoR4GGWx-BH6nGLQ"
        - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
          value: "2"
        - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
          value: "0"
        - name: KAFKA_DEFAULT_REPLICATION_FACTOR
          value: "2"
        - name: KAFKA_MIN_INSYNC_REPLICAS
          value: "1"
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: kafka1-data
          mountPath: /var/lib/kafka/data
      volumes:
      - name: kafka1-data
        persistentVolumeClaim:
          claimName: kafka1-data